- name: configure backend server
  hosts: backend
  become: yes
  vars:
    login_host: db.rithinexpense.online
    login_password: ExpenseApp@1
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: insatll nodejs
    ansible.builtin.command: 
      name: "{{ item }}"
      state: installed
    loop:
    - nodejs
    - mysql
  - name: create expense user
    ansible.builtin.user:
      name: expense
  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: download backend code
    ansible.builtin.get_url:
      url: curl -o /tmp/backend.zip https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  - name: unzip backend code
    ansible.builtin.unarchieve:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
   - name: install npm dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copy backend service
    ansible.builtin.copy:
       src: backend.service
       dest: /etc/systemd/system/backend.service
  - name: install python mysql dependencies
    ansible.builtin.pip: 
      name:
      - PyMySQL # to connect MySQL DB from Ansible
      - cryptography
      executable: pip3.9 # pip3.11 if python version is 3.11
  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ login_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: import
      name: all
  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: start and enable backend service
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes